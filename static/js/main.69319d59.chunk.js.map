{"version":3,"sources":["mapForm.js","mapcoords-only/FileForm.js","image-dots/Dot.js","image-dots/backdrop.js","mapcoords-only/InputModal.js","mapcoords-only/ImageCoordinateCollector.js","mapcoords-only/DotsInfo.js","mapcoords-only/MapCoordCollector.js","images.js","docs.js","about.js","App.js","reportWebVitals.js","index.js"],"names":["MapForm","props","handleDropdownChange","e","setState","val","target","value","handleFileChange","files","uploadedMap","url","URL","createObjectURL","name","handleStart","state","onSelect","onUpload","resorts","id","uploadedMapName","className","Container","Form","Label","Group","controlId","Control","as","onChange","this","map","resort","title","File","multiple","accept","src","alt","to","onClick","React","Component","FileForm","changeFileType","event","fileType","download","output","preventDefault","data","points","point","shortName","areaId","pisteMapCoordinates","x","y","JSON","stringify","contents","push","makeCSV","blob","Blob","fileDownloadUrl","dofileDownload","click","revokeObjectURL","upload","dofileUpload","content","csv","forEach","item","i","result","undefined","toString","replace","search","openFile","evt","fileObj","reader","FileReader","fileloaded","fileContents","json","parse","Array","isArray","loadPointData","hasOwnProperty","alert","bind","onload","readAsText","filename","fileNames","String","Row","Button","type","ref","href","Dot","onMouseDown","stopPropagation","moveDot","dotX","dotY","styles","dotRadius","style","height","width","transform","top","left","defaultProps","Backdrop","show","clicked","InputModal","clearFields","onKeyPress","key","handleSave","handleInputChange","currentDot","handleClose","wW","window","innerWidth","posX","Math","round","Card","Body","Title","column","Col","sm","defaultValue","updateCurrentDot","valueAsNumber","placeholder","autoFocus","Footer","variant","ImageCoordinateCollector","onLoadPisteMap","img","dimensions","renderWidth","offsetWidth","renderHeight","offsetHeight","realWidth","naturalWidth","realHeight","naturalHeight","onMouseUp","bounds","getBoundingClientRect","renderedToRealCoord","clientX","clientY","Object","keys","length","dot","grabbing","showModal","index","dots","deleteDot","resetDots","coord","renderedLength","realLength","realToRenderedCoord","handleShowModal","handleCloseModal","saveDot","dim","backgroundImageUrl","grabClass","onLoad","boxShadow","backgroundColor","console","log","pixelCoordinates","backgroundSize","DotsInfo","Table","hover","MapCoordCollector","addDot","shouldBlockNavigation","filter","initialDots","handleResize","windowWidth","onbeforeunload","addEventListener","removeEventListener","when","message","onLoadMap","imgSrc","images","Docs","About","App","setResort","choice","useGeoCoords","resortObject","uploadMap","file","substr","lastIndexOf","basename","Navbar","bg","Nav","Text","exact","path","pathname","from","location","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.69319d59.chunk.js","sourcesContent":["import './styles/mapForm.css';\nimport React from 'react';\nimport {Container, Form} from 'react-bootstrap';\nimport {Link} from \"react-router-dom\";\n\nclass MapForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            val: this.props.resorts[0].id,\n            uploadedMap: null,\n            uploadedMapName: '',\n        }\n    }\n\n    handleDropdownChange = (e) => {\n        this.setState({val: e.target.value});\n    }\n\n    handleFileChange = (e) => {\n        if(e.target.files[0] == null) return;\n        this.setState({\n            uploadedMap: {\n                url: URL.createObjectURL(e.target.files[0]),\n                name: e.target.files[0].name\n            }\n        });\n    }\n\n    handleStart = () => {\n        let { uploadedMap, val } = this.state;\n        if(uploadedMap == null) {\n            this.props.onSelect(val);\n        } else {\n            this.props.onUpload(uploadedMap);\n        }\n    }\n\n    render() {\n        return (\n            <div id=\"mapform\" >\n                <div className=\"vertical-center\">\n                    <Container className=\"selectcontainer\">\n                        <Form>\n                            <Form.Label className=\"form-title\">Welcome!</Form.Label>\n                            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                                <Form.Label>Select or upload piste map</Form.Label>\n                                <Form.Control as=\"select\"\n                                onChange={this.handleDropdownChange}>\n                                {this.props.resorts.map((resort => (\n                                    <option key={resort.title} value={resort.id}>{resort.title}</option>\n                                )))}\n                                </Form.Control>\n                                <br/>\n                                <Form.File onChange={this.handleFileChange}\n                                multiple={false}\n                                accept=\"image/png, image/jpeg\"/>\n                                <br/>\n                                {this.state.uploadedMap ?\n                                    <div className=\"image-wrapper\">\n                                        <img src={this.state.uploadedMap.url} alt=\"preview\"/>\n                                        <br/><br/>\n                                    </div> : null }\n                                </Form.Group>\n                                <Link to=\"/matcher\" onClick={this.handleStart} className=\"btn btn-primary\">Start!</Link>\n                        </Form>\n                    </Container>\n                </div>\n            </div>\n        );\n    }\n\n}\nexport default MapForm;\n","import '../styles/fileForm.css';\nimport React from 'react';\nimport {Row, Form, Button} from 'react-bootstrap';\nimport Container from 'react-bootstrap/Container';\n\nclass FileForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        const defaultFileType = \"json\";\n        let filename  = this.props.title;\n\n        this.fileNames = {\n            json: String(filename) + \".json\",\n            csv: String(filename) + \".csv\",\n        }\n\n        this.state = {\n            fileType: defaultFileType,\n            fileDownloadUrl: null,\n            resort: filename,\n        }\n    }\n\n    changeFileType = (event) => {\n        const value = event.target.value;\n        this.setState({fileType: value});\n    }\n\n    download = (event) => {\n        event.preventDefault();\n        let output;\n        let data = this.props.points;\n        if (this.state.fileType === \"json\") {\n            let points = data.map(point => ({\n                id: point.id,\n                name: point.name,\n                shortName: point.shortName,\n                areaId: point.areaId,\n                pisteMapCoordinates: {x: point.x, y: point.y}\n            }));\n\n            output = JSON.stringify(points, null, 4);\n        } else if (this.state.fileType === \"csv\") {\n            let contents = [];\n            contents.push ([\"id\", \"name\", \"shortName\", \"areaId\", \"x\", \"y\"]);\n            data.map(point => contents.push([point.id, point.name, point.shortName, point.areaId, point.x, point.y]));\n            output = this.makeCSV(contents);\n        }\n        const blob = new Blob([output]);\n        const fileDownloadUrl = URL.createObjectURL(blob);\n        this.setState ({fileDownloadUrl: fileDownloadUrl},\n          () => {\n            this.dofileDownload.click();\n            URL.revokeObjectURL(fileDownloadUrl);\n            this.setState({fileDownloadUrl: \"\"})\n        })\n    }\n\n    upload = (event) => {\n        event.preventDefault();\n        this.dofileUpload.click();\n    }\n\n    makeCSV = (content) => {\n        let csv = '';\n        content.forEach(value => {\n            value.forEach((item, i) => {\n                let innerValue = item === undefined ? '' : item.toString();\n                let result = innerValue.replace(/\"/g, '\"\"');\n                if (result.search(/(\"|,|\\n)/g) >= 0) {\n                    result = '\"' + result + '\"'\n                }\n                if (i > 0) {csv += ','}\n                    csv += result;\n            })\n            csv += '\\n';\n        });\n        return csv;\n    }\n\n    openFile = (evt) => {\n        const fileObj = evt.target.files[0];\n        const reader = new FileReader();\n\n        if(!(fileObj instanceof Blob)) return\n\n        let fileloaded = e => {\n            const fileContents = e.target.result;\n            try {\n                let json = JSON.parse(fileContents);\n                if(Array.isArray(json)) {\n                    this.props.loadPointData(json);\n                } else {\n                    if(json.hasOwnProperty('lifts')) {\n                        this.props.loadPointData(json['lifts']);\n                    } else if(json.hasOwnProperty('slopes')) {\n                        this.props.loadPointData(json['slopes']);\n                    } else if(json.hasOwnProperty('restaurants')) {\n                        this.props.loadPointData(json['restaurants']);\n                    } else if(json.hasOwnProperty('points')) {\n                        this.props.loadPointData(json['points']);\n                    } else {\n                        alert('Malformed JSON data, please see Docs');\n                    }\n                }\n\n            } catch(e) {\n                alert(e);\n            }\n        }\n        fileloaded = fileloaded.bind(this);\n        reader.onload = fileloaded;\n        reader.readAsText(fileObj);\n    }\n\n    render() {\n        return (\n            <div id=\"fileForm\">\n                <Container>\n                    <Row className=\"justify-content-md-center\">\n                        <Button onClick={this.upload} className=\"fileForm-child\">Upload</Button>\n                        <input type=\"file\" className=\"hidden\"\n                            multiple={false}\n                            accept=\".json,application/json\"\n                            onChange={evt => this.openFile(evt)}\n                            ref={e=>this.dofileUpload = e}/>\n\n                        <Form.Control as=\"select\" name=\"fileType\" className=\"fileForm-child\"\n                            onChange={this.changeFileType}\n                            value={this.state.fileType}>\n                            <option value=\"csv\">CSV</option>\n                            <option value=\"json\">JSON</option>\n                        </Form.Control>\n\n                        <Button onClick={this.download} className=\"fileForm-child\">\n                            Download\n                        </Button>\n                        <a className=\"hidden\"\n                            download={this.fileNames[this.state.fileType]}\n                            href={this.state.fileDownloadUrl}\n                            ref={e=>this.dofileDownload = e}>download it</a>\n                    </Row>\n                </Container>\n\n            </div>);\n    }\n}\n\nexport default FileForm;\n","import React from 'react';\n\nconst defaultProps = {\n  dotRadius: 1,\n};\n\nexport default class Dot extends React.Component {\n  onMouseDown = (e) => {\n      e.stopPropagation();\n      this.props.moveDot(this.props.i);\n  }\n\n  render() {\n    const { dotX, dotY, styles, dotRadius } = this.props;\n    return (\n      <div\n        className=\"react-image-dot\"\n        onMouseDown={this.onMouseDown}\n        style={{\n          ...styles,\n          height: dotRadius * 2,\n          width: dotRadius * 2,\n          transform: `translate(${-dotRadius}, ${-dotRadius})`,\n          top: dotY || 0,\n          left: dotX || 0\n        }}\n      />\n    );\n  }\n}\n\nDot.defaultProps = defaultProps;\n","\n\nconst Backdrop = (props) => (\n    props.show ? <div className=\"modal-backdrop\" onClick={props.clicked}></div> : null\n)\n\nexport default Backdrop;","import '../styles/geoCoordSelector.css';\nimport React from 'react';\nimport Backdrop from '../image-dots/backdrop.js';\nimport {Button, Form, Row, Col} from 'react-bootstrap';\nimport Card from 'react-bootstrap/Card';\n\nclass InputModal extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            id: this.props.currentDot.id,\n            name: this.props.currentDot.name,\n            shortName: this.props.currentDot.shortName,\n            areaId: this.props.currentDot.areaId\n        }\n    }\n\n    clearFields = () => {\n        this.setState({\n            id: '',\n            name: '',\n            shortName: '',\n            areaId: ''\n        });\n    }\n\n    onKeyPress = (e) => {\n        if(e.key === 'Enter') {\n            this.props.handleSave(this.state);\n        }\n    }\n\n    handleInputChange = (e) => {\n        const target = e.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({\n          [name]: value\n        });\n    }\n\n    render() {\n        const {handleClose} = this.props;\n        const wW = window.innerWidth;\n        var left = this.props.posX > wW/2 ? 0 : Math.round(wW*0.525);\n        return (\n            <div id=\"geoCoordSelector\">\n\n                    <div className=\"coord-selector\">\n                    <Backdrop show={true} clicked={() => this.props.handleSave(this.state)} />\n                    <Card className=\"modal-body\"\n                    style={{\n                        top: 10,\n                        left: left}}>\n                        <Card.Body>\n                            <Card.Title>Edit point data</Card.Title>\n                            <Form>\n                                <Form.Group as={Row}>\n                                    <Form.Label column>x</Form.Label>\n                                    <Col sm={4}>\n                                        <Form.Control type=\"number\" defaultValue={this.props.currentDot.x}\n                                        onChange={(e) => {this.props.updateCurrentDot({x: e.target.valueAsNumber})}}/>\n                                    </Col>\n                                    <Form.Label column>y</Form.Label>\n                                    <Col sm={4}>\n                                        <Form.Control type=\"number\" defaultValue={this.props.currentDot.y}\n                                        onChange={(e) => {this.props.updateCurrentDot({y: e.target.valueAsNumber})}}/>\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row}>\n                                    <Form.Label column >\n                                      id\n                                    </Form.Label>\n                                    <Col sm={8}>\n                                      <Form.Control type=\"text\"\n                                      placeholder=\"Enter id...\"\n                                      name=\"id\"\n                                      defaultValue={this.state.id}\n                                      onChange={this.handleInputChange}\n                                      autoFocus/>\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row}>\n                                    <Form.Label column >\n                                      name\n                                    </Form.Label>\n                                    <Col sm={8}>\n                                      <Form.Control type=\"text\"\n                                      placeholder=\"Enter name...\"\n                                      name=\"name\"\n                                      defaultValue={this.state.name}\n                                      onChange={this.handleInputChange}/>\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row}>\n                                    <Form.Label column>\n                                      shortName\n                                    </Form.Label>\n                                    <Col sm={8}>\n                                      <Form.Control type=\"text\"\n                                      placeholder=\"Enter shortName...\"\n                                      name=\"shortName\"\n                                      defaultValue={this.state.shortName}\n                                      onChange={this.handleInputChange}/>\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row}>\n                                    <Form.Label column >\n                                      areaId\n                                    </Form.Label>\n                                    <Col sm={8}>\n                                      <Form.Control type=\"text\"\n                                      placeholder=\"Enter areaId...\"\n                                      name=\"areaId\"\n                                      defaultValue={this.state.areaId}\n                                      onChange={this.handleInputChange}\n                                      onKeyPress={this.onKeyPress} />\n                                    </Col>\n                                </Form.Group>\n                            </Form>\n                        </Card.Body>\n                        <Card.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>Delete</Button>\n                            <Button variant=\"secondary\" onClick={() => this.props.handleSave(this.state)}>Close</Button>\n                            <Button variant=\"primary\" onClick={() => this.props.handleSave(this.state)}>Save</Button>\n                        </Card.Footer>\n                    </Card>\n                    </div>\n            </div>);\n    }\n}\n\nexport default InputModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Dot from '../image-dots/Dot';\nimport InputModal from './InputModal.js';\n\nconst propTypes = {\n  deleteDot: PropTypes.func.isRequired,\n  addDot: PropTypes.func.isRequired,\n  resetDots: PropTypes.func,\n  dotStyles: PropTypes.object,\n  dotRadius: PropTypes.number,\n  backgroundImageUrl: PropTypes.string,\n  styles: PropTypes.object,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  pixelCoordinates: PropTypes.bool,\n};\n\nconst defaultProps = {\n  pixelCoordinates: true,\n  backgroundSize: 'cover',\n};\n\nexport default class ImageCoordinateCollector extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            grabbing: false,\n            dimensions: {},\n            currentDot: {},\n        };\n    }\n\n    onLoadPisteMap = ({target: img}) => {\n        this.setState({\n            dimensions: {\n                renderWidth: img.offsetWidth,\n                renderHeight: img.offsetHeight,\n                realWidth: img.naturalWidth,\n                realHeight: img.naturalHeight,\n            }\n        });\n    }\n\n    onMouseUp = (e) => {\n        const bounds = e.target.getBoundingClientRect();\n        let {dimensions, currentDot} = this.state;\n        let x = Math.round(this.renderedToRealCoord(e.clientX - bounds.left, dimensions.renderWidth, dimensions.realWidth));\n        let y = Math.round(this.renderedToRealCoord(e.clientY - bounds.top, dimensions.renderHeight, dimensions.realHeight))\n        if(Object.keys(currentDot).length === 0) {\n            let dot = {\n                x: x,\n                y: y,\n            };\n\n            this.setState({\n                grabbing: false,\n                showModal: true,\n                currentDot: dot,\n            });\n        }\n\n    }\n\n    updateCurrentDot = (dot) => {\n        let currentDot = this.state.currentDot;\n        this.setState({\n            currentDot: {...currentDot,...dot},});\n    }\n\n    moveDot = (index) => {\n        let dot = this.props.dots[index];\n        this.setState({\n            grabbing: true,\n            currentDot: dot,\n            showModal: true,\n        });\n        this.props.deleteDot(index);\n    }\n\n    resetDots = () => {\n        this.props.resetDots();\n    }\n\n    // Translate from rendered coordinates to real piste map coordinates\n    renderedToRealCoord = (coord, renderedLength, realLength) => {\n        return (coord/renderedLength)*realLength;\n    }\n\n    realToRenderedCoord = (coord, renderedLength, realLength) => {\n        return (coord/realLength)*renderedLength;\n    }\n\n    handleShowModal = () => {\n        this.setState({showModal: true});\n    }\n\n    handleCloseModal = () => {\n        this.setState({grabbing: false, showModal: false, currentDot: {}});\n    }\n\n    handleSave = (data) => {\n        let currentDot = this.state.currentDot;\n        this.setState({\n            currentDot: {...currentDot,...data},}, function() {\n                this.props.saveDot(this.state.currentDot);\n                this.handleCloseModal();\n            });\n    }\n\n    render() {\n        const {grabbing, currentDot} = this.state;\n        const dim = this.state.dimensions;\n        const {dots, backgroundImageUrl, dotRadius} = this.props;\n        const grabClass = grabbing ? 'react-image-dot__grabbing' : '';\n\n        return (\n        <div id=\"react-image-dot\">\n\n            <div className={`react-image-dot__wrapper ${grabClass} no-select`}\n            onMouseUp={this.onMouseUp}\n            width={dim.realWidth}\n            height={dim.realHeight}>\n\n                <img\n                id=\"pistemap-img\"\n                src={backgroundImageUrl} alt=\"Piste map\"\n                width={dim.realWidth} onLoad={this.onLoadPisteMap} />\n\n                {dots.map((dot, i) =>\n                    <Dot\n                    dotX={Math.round(this.realToRenderedCoord(dot.x, dim.renderWidth, dim.realWidth))}\n                    dotY={Math.round(this.realToRenderedCoord(dot.y, dim.renderHeight, dim.realHeight))}\n                    i={i}\n                    styles={{\n                        boxShadow: '0px 0px 0px 2px lime',\n                        backgroundColor: 'magenta',\n                    }}\n                    moveDot={this.moveDot}\n                    dotRadius={dotRadius}\n                    key={i}\n                    />)}\n\n                {Object.keys(currentDot).length === 0 ? null: <Dot\n                    dotX={Math.round(this.realToRenderedCoord(currentDot.x, dim.renderWidth, dim.realWidth))}\n                    dotY={Math.round(this.realToRenderedCoord(currentDot.y, dim.renderHeight, dim.realHeight))}\n                    i={0}\n                    styles={{\n                        boxShadow: '0px 0px 0px 2px magenta',\n                        backgroundColor: 'lime',\n                    }}\n                    moveDot={() => console.log('try to move temp dot')}\n                    dotRadius={dotRadius}\n                    key={-1}\n                    />}\n            </div>\n            number of points: {this.props.dots.length}\n            {\n                this.state.showModal ? <InputModal\n                dimensions={dim}\n                posX={this.realToRenderedCoord(currentDot.x, dim.renderWidth, dim.realWidth)}\n                handleClose={this.handleCloseModal}\n                handleSave={this.handleSave}\n                updateCurrentDot={this.updateCurrentDot}\n                currentDot={this.state.currentDot}\n                /> : null\n            }\n\n            {this.props.resetDots &&\n            <button onClick={this.resetDots}>Reset</button>}\n        </div>\n        );\n    }\n}\n\nImageCoordinateCollector.propTypes = propTypes;\nImageCoordinateCollector.defaultProps = defaultProps;\n","import React from 'react';\nimport {Button} from 'react-bootstrap';\nimport Table from 'react-bootstrap/Table';\n\nexport default function DotsInfo({dots, deleteDot, resetDots}) {\n  return (\n      <div className=\"dotsinfo\">\n          <div className=\"row justify-content-center\">\n            <Table hover className=\"dotsinfotable \">\n                <thead>\n                    <tr>\n                    <th>#</th>\n                    <th>id</th>\n                    <th>shortName</th>\n                    <th>x</th>\n                    <th>y</th>\n                    <th>name</th>\n                    <th>areaId</th>\n                    <th>delete</th>\n                    </tr>\n                </thead>\n                <tbody>\n                {dots.map((dot, i) => {\n                    return (<tr key={i}>\n                            <td>{i} </td>\n                            <td>{dot.id}</td>\n                            <td>{dot.shortName}</td>\n                            <td>{dot.x}</td>\n                            <td>{dot.y}</td>\n                            <td>{dot.name}</td>\n                            <td>{dot.areaId}</td>\n                            <td><Button variant='danger' onClick={() => deleteDot(i)}>×</Button></td>\n                    </tr>);})}\n                </tbody>\n              </Table>\n          </div>\n          <Button variant='success' onClick={() => resetDots()}>Reset</Button>\n      </div>\n\n  );\n}\n","import '../styles/image-dots.css';\nimport React from 'react';\nimport FileForm from './FileForm.js';\nimport ImageCoordinateCollector from './ImageCoordinateCollector.js';\nimport DotsInfo from './DotsInfo.js';\nimport { Prompt } from 'react-router';\n\nclass MapCoordCollector extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.initialDots = [];\n        this.state = {\n            title: this.props.resort.title,\n            src: this.props.resort.src,\n            dots: this.initialDots,\n            windowWidth: window.innerWidth*0.98,\n            shouldBlockNavigation: false,\n        }\n    }\n\n    componentDidUpdate() {\n        if (this.state.shouldBlockNavigation) {\n            window.onbeforeunload = () => true\n        } else {\n            window.onbeforeunload = undefined\n        }\n    }\n\n    // Translate from rendered coordinates to real piste map coordinates\n    renderedToRealCoord(coord, renderedLength, realLength) {\n        return (coord/renderedLength)*realLength;\n    }\n\n    realToRenderedCoord(coord, renderedLength, realLength) {\n        return (coord/realLength)*renderedLength;\n    }\n\n    addDot = (dot) => {\n        let dots = this.state.dots;\n        this.setState({\n            dots: [...dots, dot],\n            shouldBlockNavigation: true,\n        });\n    }\n\n    saveDot = (dot) => {\n        let {dots} = this.state;\n        this.deleteDot(dots.length-1);\n        this.addDot(dot);\n    }\n\n    deleteDot = (index) => {\n        this.setState({\n            dots: this.state.dots.filter((e, i) => {return i !== index;}),\n        });\n    }\n\n    resetDots = () => {\n        this.setState({\n            dots: this.initialDots,\n        });\n    }\n\n    handleResize = () => {\n        this.setState({ windowWidth: window.innerWidth*0.98 });\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.handleResize);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.handleResize);\n    }\n\n    loadPointData = (data) => {\n        let dots = data.map(point =>\n            ({  id: point.id,\n                name: point.name,\n                shortName: point.shortName,\n                areaId: point.areaId,\n                x: point.pisteMapCoordinates ? point.pisteMapCoordinates.x : 0,\n                y: point.pisteMapCoordinates ? point.pisteMapCoordinates.y : 0\n            })\n        );\n        this.initialDots = dots;\n        this.setState({dots: dots});\n    }\n\n    render() {\n        const { dots, src} = this.state;\n\n        return (\n            <div id=\"matcher\">\n\n                <Prompt\n                  when={this.state.shouldBlockNavigation}\n                  message='You have unsaved changes, are you sure you want to leave?'\n                />\n                <ImageCoordinateCollector\n                backgroundImageUrl={src}\n                onLoadMap={this.onLoadPisteMap}\n                dots={dots}\n                deleteDot={this.deleteDot}\n                saveDot={this.saveDot}\n                addDot={this.addDot}\n                dotRadius={10}\n                />\n                <div className=\"bottom-toolbox\">\n                {this.props.resort.title}\n                    <FileForm\n                        imgSrc={this.state.src}\n                        title={this.state.title}\n                        points={this.state.dots}\n                        loadPointData={this.loadPointData}/>\n                    <DotsInfo dots={this.state.dots} deleteDot={this.deleteDot} resetDots={this.resetDots}></DotsInfo>\n                </div>\n            </div>);\n    }\n}\n\nexport default MapCoordCollector;\n","const images = [\n    { id: 0, src: './assets/are.png', title: 'Åre'},\n    { id: 1, src: './assets/bjornen.png', title: 'Åre Björnen'},\n    { id: 2, src: './assets/duved.png', title: 'Duved'},\n    { id: 3, src: './assets/bjornrike.png', title: 'Björnrike'},\n    { id: 4, src: './assets/vemdalsskalet.png', title: 'Vemdalsskalet'},\n    { id: 5, src: './assets/hemsedal.png', title: 'Hemsedal'},\n    { id: 6, src: './assets/salen-lindvallen.png', title: 'Lindvallen'},\n    { id: 7, src: './assets/salen-hogfjallet.png', title: 'Högfjället'},\n    { id: 8, src: './assets/salen-hundfjallet.png', title: 'Hundfjället'}\n];\n\nexport default images;\n","import React from 'react';\nimport {Container, Row} from 'react-bootstrap';\n\nfunction Docs(props) {\n    return (<div id=\"docs\" >\n                <div className=\"page-content\">\n                    <h1>\n                        Documentation\n                    </h1>\n\n                    <ul>\n                        <li>\n                            Start by selecting a piste map from the drop down field or uploading a map using the file upload button\n                        </li>\n                        <li>\n                            Clicking <b>Start</b> will take you to the <b>matching view</b>. Here, you can click on the map to add a new point.\n                        </li>\n                        <li>\n                            When a new point is added, the input modal is shown. Here you can make adjustments to the (x, y) coordinate, the id, name, shortName, and areaId. Click on save to save the point.\n                        </li>\n                        <li>\n                            You can also upload an existing JSON file in the <b>matching view</b>. This will load the data in the file and render the points. You can make changes, and then download the updated version using the <b>Download</b> button.\n                        </li>\n                    </ul>\n\n                    <br/>\n\n                    <Container>\n                    <Row><h2>File structure</h2></Row>\n                    <Row>\n                    <div className=\"json-snippet\">\n                        <pre>{JSON.stringify({\n                        \"points\": [\n                            {\n                                \"id\": \"193\",\n                                \"name\": \"Adam\",\n                                \"shortName\": \"1\",\n                                \"areaId\": \"lindvallen\",\n                                \"pisteMapCoordinates\": {\n                                    \"x\": 145,\n                                    \"y\": 537\n                                }\n                            },\n                            {\n                                \"id\": \"194\",\n                                \"name\": \"Pernilla\",\n                                \"shortName\": \"2\",\n                                \"areaId\": \"lindvallen\",\n                                \"pisteMapCoordinates\": {\n                                    \"x\": 281,\n                                    \"y\": 535\n                                }\n                            }\n                        ]}, null, 2)}</pre>\n\n                    </div>\n                    </Row>\n                    </Container>\n                </div>\n            </div>\n    );\n}\n\nexport default Docs;\n","import React from 'react';\n\nfunction About(props) {\n    return (<div id=\"about\" >\n                <div className=\"page-content\">\n                    <h1>\n                        About\n                    </h1>\n                    <p>\n                        <b>Created by:</b> Lou-Lou Pei <br/>\n                        <b>Why:</b> To aid in the coordinate collection process of piste maps. <br/>\n                        <a href=\"https://github.com/ellpei/coordinate-collector/issues\">Submit an issue</a>\n                    </p>\n                </div>\n            </div>\n    );\n}\n\nexport default About;\n","import './styles/App.css';\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MapForm from './mapForm.js';\nimport MapCoordCollector from './mapcoords-only/MapCoordCollector.js';\nimport images from './images';\nimport Docs from './docs.js';\nimport About from './about.js';\nimport {Navbar, Nav} from 'react-bootstrap';\nimport {\n    HashRouter as Router,\n    Link,\n    Switch,\n    Route,\n    Redirect,\n  } from \"react-router-dom\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            resortObject: null,\n            useGeoCoords: true,\n        };\n    }\n\n    setResort = (choice, useGeoCoords) => {\n        this.setState({\n            resortObject: images[choice],\n            useGeoCoords: useGeoCoords\n        });\n    }\n\n    uploadMap = (file, useGeoCoords) => {\n        let filename = file.name;\n        let title = filename.substr(0, filename.lastIndexOf('.'));\n        this.setState({\n            resortObject: { src: file.url, title: title},\n            useGeoCoords: useGeoCoords,\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Router basename=\"/\">\n                    <Navbar className=\"navbar\" bg=\"light\" variant=\"light\">\n                        <Link className=\"navbar-brand\" to=\"/\">\n                            <div className=\"header\">\n                                <h1>Coordinate Collector</h1>\n                            </div>\n                        </Link>\n                        <Nav className=\"mr-auto\">\n                            <Link className=\"nav-link\" to=\"/docs\">Docs</Link>\n                            <Link className=\"nav-link\" to=\"/about\">About</Link>\n                        </Nav>\n                        { this.state.resortObject ?\n                            <Navbar.Text>\n                                {this.state.resortObject.title}\n                            </Navbar.Text> : null }\n\n                    </Navbar>\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <MapForm\n                            resorts={images}\n                            onSelect={this.setResort}\n                            onUpload={this.uploadMap}/>\n                        </Route>\n                        <Route path=\"/docs\">\n                            <Docs />\n                        </Route>\n                        <Route path=\"/about\">\n                            <About />\n                        </Route>\n                        <Route path=\"/matcher\">\n                        {(() => {\n                              if (!this.state.resortObject)\n                                 return <Redirect to={{ pathname: '/', state: { from: this.props.location } }} />\n                              else\n                                 return <MapCoordCollector resort={this.state.resortObject}/>\n                          })()}\n                        </Route>\n                    </Switch>\n                </Router>\n            </div>\n        );\n    }\n\n\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}